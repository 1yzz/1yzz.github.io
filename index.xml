<?xml version="1.0" encoding="utf-8" standalone="yes"?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Blog</title>
    <link>https://1yzz.github.io/</link>
    <description>Recent content on Blog</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Thu, 30 Apr 2020 14:46:44 +0800</lastBuildDate>
    
	<atom:link href="https://1yzz.github.io/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>JavaScript中的模块化编程</title>
      <link>https://1yzz.github.io/posts/my-first-post/</link>
      <pubDate>Thu, 30 Apr 2020 14:46:44 +0800</pubDate>
      
      <guid>https://1yzz.github.io/posts/my-first-post/</guid>
      <description>CommonJS var $ = require(&#39;jquery&#39;); exports.myExample = function () {}; AMD  AMD module format是关于定义模块的一个提案，其中模块和依赖都可以异步加载，非常适合浏览器环境
 RequireJS的说明
define([&#39;jquery&#39;] , function ($) { return function () {}; }); ES2015(ES6) export export default 1 export default NaN export default &#39;foo&#39; export default { foo: &#39;bar&#39; } export default function foo () {} export { foo as default, bar } 重要的一点是，我们export的是变量的引用
import 拿lodash作为例子，下面的表达式加载了lodash模块，会执行模块最顶层的代码块
import {default, map} from &#39;lodash&#39; import {default as _, map} from &#39;lodash&#39; import _, {map} from &#39;lodash&#39; 差异 Imports work differently in CommonJS and ES6:</description>
    </item>
    
  </channel>
</rss>